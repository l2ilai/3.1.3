#name: Build #& Deploy
#
#on:
#  push:
#    branches:
#      [main, master]
#
#jobs:
#  push_compose:
#    name: Push docker-compose.yaml to remote server
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Copy docker-compose.yaml via SSH
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USER }}
#          key: ${{secrets.SSH_PRIVATE_KEY}}
#          port: 22
#          source: "docker-compose.yml"
#          target: "/home/${{ secrets.SSH_USER }}"
#          overwrite: true
#
#  build_and_push_images:
#    name: Push image to DockerHub
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Login to DockerHub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#
#      - name: Review Bot Build and Push to Dockerhub
#        uses: docker/build-push-action@v2
#        with:
#          file: ./Dockerfile
#          push: true
#          tags: l2ilai/spring-app
#
#  deploy:
#    name: Deploy
#    runs-on: ubuntu-latest
#    needs: [ build_and_push_images, push_compose ]
#    steps:
#      - name: Connect with SSH and Deploy
#        uses: appleboy/ssh-action@v1.0.3
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USER }}
#          key: ${{secrets.SSH_PRIVATE_KEY}}
#          port: 22
#          script: |
#            whoami
#            ls
#
#            sudo cd -e /home/${{ secrets.SSH_USER }}
#
#            echo DB_USER = ${{ secrets.DB_USER }} >> java-app-env.txt
#            echo DB_PASS = ${{ secrets.DB_PASS }} >> java-app-env.txt
#
#            sudo docker stop java-app
#            sudo docker rm java-app
#            sudo docker rmi l2ilai/spring-app
#
#            sudo docker-compose -f docker-compose.yml --env-file=java-app-env.txt up -d
#
#            rm java-app-env.txt