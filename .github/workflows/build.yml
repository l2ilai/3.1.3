name: Build & Deploy

on:
  push:
    branches:
      [main, master]

jobs:
#  push_compose:
#    name: Push docker-compose.yaml to remote server
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Copy docker-compose.yaml via SSH
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.SSH_HOST }}
#          username: ${{ secrets.SSH_USER }}
#          key: ${{secrets.SSH_PRIVATE_KEY}}
#          port: 22
#          source: "docker-compose.yml, id_rsa"
#          target: "/home/${{ secrets.SSH_USER }}"
#          overwrite: true

#  build_and_push_images:
#    name: Push image to DockerHub
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Login to DockerHub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v2
#      - name: Review Bot Build and Push to Dockerhub
#        uses: docker/build-push-action@v2
#        with:
#          file: ./Dockerfile
#          push: true
#          tags: ${{ secrets.DOCKERHUB_USERNAME }}/spring-app

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
#    needs: [ build_and_push_images, push_compose ]
    steps:
      - name: Connect with SSH and Deploy
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{secrets.SSH_PRIVATE_KEY}}
          port: 22
          script: |
            echo DB_USER = ${{ secrets.DB_USER }} >> java-app-env.txt
            echo DB_PASS = ${{ secrets.DB_PASS }} >> java-app-env.txt
            echo DB_URL = ${{ secrets.DB_URL }} >> java-app-env.txt
            echo SSH_IP = ${{ secrets.SSH_IP }} >> java-app-env.txt
            echo SSH_USER = ${{ secrets.SSH_USER }} >> java-app-env.txt
            echo SSH_PRIVATE_KEY = ${{ secrets.SSH_PRIVATE_KEY }} >> java-app-env.txt
            echo SSH_KEY = ${{ secrets.SSH_KEY }} >> java-app-env.txt
            echo BOT_TOKEN = ${{ secrets.BOT_TOKEN }} >> java-app-env.txt
            echo BOT_NAME = ${{ secrets.BOT_NAME }} >> java-app-env.txt
                       
            echo ${{ secrets.SSH_KEY }} >> id_rsa
            echo SSH_PRIVATE_KEY = ${{ secrets.SSH_PRIVATE_KEY }} >> id_rsa1
            echo SSH_KEY = ${{ secrets.SSH_KEY }} >> id_rsa1
